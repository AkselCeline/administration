{"ast":null,"code":"import _objectSpread from\"C:/Users/Karim/Desktop/codeaventure/my-learning-app-starter/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const dragItems=[{id:'pos',label:'Positif'},{id:'neg',label:'Négatif'},{id:'nul',label:'Nul'}];const numbersToSort=[{id:1,value:10,correct:'pos'},{id:2,value:-5,correct:'neg'},{id:3,value:0,correct:'nul'},{id:4,value:3,correct:'pos'},{id:5,value:-12,correct:'neg'}];export default function PositiveNegativeLesson(){const[userAnswer,setUserAnswer]=useState('');const[quizResult,setQuizResult]=useState(null);const exampleNumber=-7;// Animation state\nconst[step,setStep]=useState(0);// Drag & Drop state\nconst[draggingId,setDraggingId]=useState(null);const[assignments,setAssignments]=useState({});// numberId -> dragItemId\nconst[gameResult,setGameResult]=useState(null);// Animation steps texts\nconst animationSteps=[\"Le nombre est \".concat(exampleNumber),exampleNumber>0?'Le nombre est supérieur à 0 → Positif':exampleNumber<0?'Le nombre est inférieur à 0 → Négatif':'Le nombre est égal à 0 → Nul'];// Animation auto-advance every 2s\nuseEffect(()=>{if(step<animationSteps.length-1){const timer=setTimeout(()=>setStep(step+1),2000);return()=>clearTimeout(timer);}},[step]);// Quiz check\nfunction checkAnswer(e){e.preventDefault();const answer=userAnswer.trim().toLowerCase();if(exampleNumber<0&&(answer==='négatif'||answer==='negatif')||exampleNumber>0&&answer==='positif'||exampleNumber===0&&answer==='nul'){setQuizResult(true);}else{setQuizResult(false);}}// Drag & Drop handlers\nfunction handleDragStart(id){setDraggingId(id);}function handleDrop(numberId){if(!draggingId)return;setAssignments(prev=>_objectSpread(_objectSpread({},prev),{},{[numberId]:draggingId}));setDraggingId(null);}// Check drag game result\nfunction checkGame(){const allCorrect=numbersToSort.every(n=>assignments[n.id]===n.correct);setGameResult(allCorrect);}return/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-xl mx-auto p-6 font-sans space-y-8\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-3xl font-bold mb-4\",children:\"Les nombres positifs et n\\xE9gatifs en algorithme\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"En algorithmique, il est important de savoir si un nombre est \",/*#__PURE__*/_jsx(\"strong\",{children:\"positif\"}),\", \",/*#__PURE__*/_jsx(\"strong\",{children:\"n\\xE9gatif\"}),\" ou \",/*#__PURE__*/_jsx(\"strong\",{children:\"nul\"}),\".\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"- Un nombre est \",/*#__PURE__*/_jsx(\"strong\",{children:\"positif\"}),\" s\\u2019il est sup\\xE9rieur \\xE0 z\\xE9ro.\",/*#__PURE__*/_jsx(\"br\",{}),\"- Un nombre est \",/*#__PURE__*/_jsx(\"strong\",{children:\"n\\xE9gatif\"}),\" s\\u2019il est inf\\xE9rieur \\xE0 z\\xE9ro.\",/*#__PURE__*/_jsx(\"br\",{}),\"- Le nombre \",/*#__PURE__*/_jsx(\"strong\",{children:\"0\"}),\" est appel\\xE9 \",/*#__PURE__*/_jsx(\"strong\",{children:\"nul\"}),\".\"]}),/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-semibold\",children:\"Animation explicative\"}),/*#__PURE__*/_jsx(\"div\",{className:\"p-4 mb-6 bg-blue-50 border border-blue-200 rounded font-mono text-lg text-center\",children:animationSteps[step]}),/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-semibold\",children:\"Exemple d\\u2019algorithme simple :\"}),/*#__PURE__*/_jsx(\"pre\",{className:\"bg-gray-100 p-4 rounded font-mono text-sm\",children:\"Si nombre > 0 alors\\n    Afficher \\\"Le nombre est positif\\\"\\nSinon si nombre < 0 alors\\n    Afficher \\\"Le nombre est n\\xE9gatif\\\"\\nSinon\\n    Afficher \\\"Le nombre est nul\\\"\\nFin Si\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Testons ce nombre : \",/*#__PURE__*/_jsx(\"strong\",{children:exampleNumber})]}),/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold mt-4\",children:\"Quiz rapide\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:checkAnswer,className:\"space-y-2 max-w-sm\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"block\",children:[\"Selon l\\u2019algorithme, ce nombre est :\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:userAnswer,onChange:e=>setUserAnswer(e.target.value),placeholder:\"positif / n\\xE9gatif / nul\",className:\"mt-1 w-full border border-gray-400 rounded px-2 py-1\"})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 transition\",children:\"V\\xE9rifier\"})]}),quizResult===true&&/*#__PURE__*/_jsx(\"p\",{className:\"text-green-600 font-semibold mt-2\",children:\"Bravo ! C\\u2019est la bonne r\\xE9ponse.\"}),quizResult===false&&/*#__PURE__*/_jsx(\"p\",{className:\"text-red-600 font-semibold mt-2\",children:\"Essaie encore :)\"}),/*#__PURE__*/_jsx(\"hr\",{className:\"my-8\"}),/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-semibold\",children:\"Mini-jeu : Associe chaque nombre \\xE0 son type\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Clique et glisse l\\u2019\\xE9tiquette \\xAB Positif \\xBB, \\xAB N\\xE9gatif \\xBB ou \\xAB Nul \\xBB sur chaque nombre.\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-wrap gap-6 mt-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-col space-y-3\",children:numbersToSort.map(n=>/*#__PURE__*/_jsx(\"div\",{onDrop:()=>handleDrop(n.id),onDragOver:e=>e.preventDefault(),className:\"w-24 h-12 border border-gray-400 rounded flex items-center justify-center text-xl font-semibold cursor-pointer\",style:{backgroundColor:assignments[n.id]?'#d1fae5':'white'},children:n.value},n.id))}),/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-col space-y-3\",children:dragItems.map(item=>/*#__PURE__*/_jsx(\"div\",{draggable:true,onDragStart:()=>handleDragStart(item.id),className:\"w-32 h-12 bg-blue-600 text-white rounded flex items-center justify-center cursor-grab select-none\",children:item.label},item.id))})]}),/*#__PURE__*/_jsx(\"button\",{onClick:checkGame,className:\"mt-6 bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700 transition\",children:\"V\\xE9rifier les r\\xE9ponses\"}),gameResult===true&&/*#__PURE__*/_jsx(\"p\",{className:\"text-green-700 font-semibold mt-3\",children:\"Super ! Tu as bien associ\\xE9 tous les nombres.\"}),gameResult===false&&/*#__PURE__*/_jsx(\"p\",{className:\"text-red-700 font-semibold mt-3\",children:\"Certaines r\\xE9ponses sont incorrectes. Essaie encore !\"})]});}","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","dragItems","id","label","numbersToSort","value","correct","PositiveNegativeLesson","userAnswer","setUserAnswer","quizResult","setQuizResult","exampleNumber","step","setStep","draggingId","setDraggingId","assignments","setAssignments","gameResult","setGameResult","animationSteps","concat","length","timer","setTimeout","clearTimeout","checkAnswer","e","preventDefault","answer","trim","toLowerCase","handleDragStart","handleDrop","numberId","prev","_objectSpread","checkGame","allCorrect","every","n","className","children","onSubmit","type","onChange","target","placeholder","map","onDrop","onDragOver","style","backgroundColor","item","draggable","onDragStart","onClick"],"sources":["C:/Users/Karim/Desktop/codeaventure/my-learning-app-starter/src/pages/lessons/PositiveNegativeLesson.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst dragItems = [\r\n    { id: 'pos', label: 'Positif' },\r\n    { id: 'neg', label: 'Négatif' },\r\n    { id: 'nul', label: 'Nul' },\r\n];\r\n\r\nconst numbersToSort = [\r\n    { id: 1, value: 10, correct: 'pos' },\r\n    { id: 2, value: -5, correct: 'neg' },\r\n    { id: 3, value: 0, correct: 'nul' },\r\n    { id: 4, value: 3, correct: 'pos' },\r\n    { id: 5, value: -12, correct: 'neg' },\r\n];\r\n\r\nexport default function PositiveNegativeLesson() {\r\n    const [userAnswer, setUserAnswer] = useState('');\r\n    const [quizResult, setQuizResult] = useState(null);\r\n\r\n    const exampleNumber = -7;\r\n\r\n    // Animation state\r\n    const [step, setStep] = useState(0);\r\n\r\n    // Drag & Drop state\r\n    const [draggingId, setDraggingId] = useState(null);\r\n    const [assignments, setAssignments] = useState({}); // numberId -> dragItemId\r\n    const [gameResult, setGameResult] = useState(null);\r\n\r\n    // Animation steps texts\r\n    const animationSteps = [\r\n        `Le nombre est ${exampleNumber}`,\r\n        exampleNumber > 0\r\n            ? 'Le nombre est supérieur à 0 → Positif'\r\n            : exampleNumber < 0\r\n                ? 'Le nombre est inférieur à 0 → Négatif'\r\n                : 'Le nombre est égal à 0 → Nul',\r\n    ];\r\n\r\n    // Animation auto-advance every 2s\r\n    useEffect(() => {\r\n        if (step < animationSteps.length - 1) {\r\n            const timer = setTimeout(() => setStep(step + 1), 2000);\r\n            return () => clearTimeout(timer);\r\n        }\r\n    }, [step]);\r\n\r\n    // Quiz check\r\n    function checkAnswer(e) {\r\n        e.preventDefault();\r\n        const answer = userAnswer.trim().toLowerCase();\r\n        if (\r\n            (exampleNumber < 0 && (answer === 'négatif' || answer === 'negatif')) ||\r\n            (exampleNumber > 0 && answer === 'positif') ||\r\n            (exampleNumber === 0 && answer === 'nul')\r\n        ) {\r\n            setQuizResult(true);\r\n        } else {\r\n            setQuizResult(false);\r\n        }\r\n    }\r\n\r\n    // Drag & Drop handlers\r\n    function handleDragStart(id) {\r\n        setDraggingId(id);\r\n    }\r\n\r\n    function handleDrop(numberId) {\r\n        if (!draggingId) return;\r\n        setAssignments(prev => ({ ...prev, [numberId]: draggingId }));\r\n        setDraggingId(null);\r\n    }\r\n\r\n    // Check drag game result\r\n    function checkGame() {\r\n        const allCorrect = numbersToSort.every(\r\n            n => assignments[n.id] === n.correct\r\n        );\r\n        setGameResult(allCorrect);\r\n    }\r\n\r\n    return (\r\n        <div className=\"max-w-xl mx-auto p-6 font-sans space-y-8\">\r\n            <h1 className=\"text-3xl font-bold mb-4\">Les nombres positifs et négatifs en algorithme</h1>\r\n\r\n            <p>\r\n                En algorithmique, il est important de savoir si un nombre est <strong>positif</strong>, <strong>négatif</strong> ou <strong>nul</strong>.\r\n            </p>\r\n            <p>\r\n                - Un nombre est <strong>positif</strong> s’il est supérieur à zéro.<br />\r\n                - Un nombre est <strong>négatif</strong> s’il est inférieur à zéro.<br />\r\n                - Le nombre <strong>0</strong> est appelé <strong>nul</strong>.\r\n            </p>\r\n\r\n            <h2 className=\"text-xl font-semibold\">Animation explicative</h2>\r\n            <div className=\"p-4 mb-6 bg-blue-50 border border-blue-200 rounded font-mono text-lg text-center\">\r\n                {animationSteps[step]}\r\n            </div>\r\n\r\n            <h2 className=\"text-xl font-semibold\">Exemple d’algorithme simple :</h2>\r\n            <pre className=\"bg-gray-100 p-4 rounded font-mono text-sm\">\r\n{`Si nombre > 0 alors\r\n    Afficher \"Le nombre est positif\"\r\nSinon si nombre < 0 alors\r\n    Afficher \"Le nombre est négatif\"\r\nSinon\r\n    Afficher \"Le nombre est nul\"\r\nFin Si`}\r\n      </pre>\r\n\r\n            <p>Testons ce nombre : <strong>{exampleNumber}</strong></p>\r\n\r\n            <h3 className=\"text-lg font-semibold mt-4\">Quiz rapide</h3>\r\n            <form onSubmit={checkAnswer} className=\"space-y-2 max-w-sm\">\r\n                <label className=\"block\">\r\n                    Selon l’algorithme, ce nombre est :\r\n                    <input\r\n                        type=\"text\"\r\n                        value={userAnswer}\r\n                        onChange={e => setUserAnswer(e.target.value)}\r\n                        placeholder=\"positif / négatif / nul\"\r\n                        className=\"mt-1 w-full border border-gray-400 rounded px-2 py-1\"\r\n                    />\r\n                </label>\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 transition\"\r\n                >\r\n                    Vérifier\r\n                </button>\r\n            </form>\r\n            {quizResult === true && (\r\n                <p className=\"text-green-600 font-semibold mt-2\">Bravo ! C’est la bonne réponse.</p>\r\n            )}\r\n            {quizResult === false && (\r\n                <p className=\"text-red-600 font-semibold mt-2\">Essaie encore :)</p>\r\n            )}\r\n\r\n            <hr className=\"my-8\"/>\r\n\r\n            <h2 className=\"text-xl font-semibold\">Mini-jeu : Associe chaque nombre à son type</h2>\r\n            <p>Clique et glisse l’étiquette « Positif », « Négatif » ou « Nul » sur chaque nombre.</p>\r\n\r\n            <div className=\"flex flex-wrap gap-6 mt-4\">\r\n                {/* Nombres à classer */}\r\n                <div className=\"flex flex-col space-y-3\">\r\n                    {numbersToSort.map(n => (\r\n                        <div\r\n                            key={n.id}\r\n                            onDrop={() => handleDrop(n.id)}\r\n                            onDragOver={e => e.preventDefault()}\r\n                            className=\"w-24 h-12 border border-gray-400 rounded flex items-center justify-center text-xl font-semibold cursor-pointer\"\r\n                            style={{backgroundColor: assignments[n.id] ? '#d1fae5' : 'white'}}\r\n                        >\r\n                            {n.value}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n\r\n                {/* Étiquettes draggable */}\r\n                <div className=\"flex flex-col space-y-3\">\r\n                    {dragItems.map(item => (\r\n                        <div\r\n                            key={item.id}\r\n                            draggable\r\n                            onDragStart={() => handleDragStart(item.id)}\r\n                            className=\"w-32 h-12 bg-blue-600 text-white rounded flex items-center justify-center cursor-grab select-none\"\r\n                        >\r\n                            {item.label}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n\r\n            <button\r\n                onClick={checkGame}\r\n                className=\"mt-6 bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700 transition\"\r\n            >\r\n                Vérifier les réponses\r\n            </button>\r\n            {gameResult === true && (\r\n                <p className=\"text-green-700 font-semibold mt-3\">Super ! Tu as bien associé tous les nombres.</p>\r\n            )}\r\n            {gameResult === false && (\r\n                <p className=\"text-red-700 font-semibold mt-3\">Certaines réponses sont incorrectes. Essaie encore !</p>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}