{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Karim\\\\Desktop\\\\codeaventure\\\\my-learning-app-starter\\\\src\\\\pages\\\\lessons\\\\FirstAlgorithmGame.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialPosition = {\n  x: 0,\n  y: 0,\n  direction: 'right'\n};\nconst gridSize = 3;\nexport default function FirstAlgorithmGame() {\n  _s();\n  const [commands, setCommands] = useState('');\n  const [position, setPosition] = useState(initialPosition);\n  const [history, setHistory] = useState([]);\n  const [message, setMessage] = useState('');\n  function resetGame() {\n    setPosition(initialPosition);\n    setHistory([]);\n    setMessage('');\n  }\n  function runCommands() {\n    resetGame();\n    const lines = commands.split('\\n').map(line => line.trim()).filter(Boolean);\n    let pos = {\n      ...initialPosition\n    };\n    const steps = [pos];\n    for (let cmd of lines) {\n      if (cmd === 'avancer()') {\n        pos = moveForward(pos);\n      } else if (cmd === 'tournerGauche()') {\n        pos = turnLeft(pos);\n      } else if (cmd === 'tournerDroite()') {\n        pos = turnRight(pos);\n      } else {\n        setMessage(`Commande inconnue : ${cmd}`);\n        return;\n      }\n      steps.push({\n        ...pos\n      });\n    }\n    setPosition(pos);\n    setHistory(steps);\n    if (pos.x === gridSize - 1 && pos.y === gridSize - 1) {\n      setMessage(\"üéâ Bravo ! Le robot est sorti du labyrinthe.\");\n    } else {\n      setMessage(\"‚ùå Le robot n'a pas atteint la sortie. Essaie encore !\");\n    }\n  }\n  function moveForward(pos) {\n    const newPos = {\n      ...pos\n    };\n    if (pos.direction === 'right' && pos.x < gridSize - 1) newPos.x++;\n    if (pos.direction === 'left' && pos.x > 0) newPos.x--;\n    if (pos.direction === 'up' && pos.y > 0) newPos.y--;\n    if (pos.direction === 'down' && pos.y < gridSize - 1) newPos.y++;\n    return newPos;\n  }\n  function turnLeft(pos) {\n    const directions = ['up', 'left', 'down', 'right'];\n    const idx = directions.indexOf(pos.direction);\n    return {\n      ...pos,\n      direction: directions[(idx + 1) % 4]\n    };\n  }\n  function turnRight(pos) {\n    const directions = ['up', 'right', 'down', 'left'];\n    const idx = directions.indexOf(pos.direction);\n    return {\n      ...pos,\n      direction: directions[(idx + 1) % 4]\n    };\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-xl mx-auto p-6 space-y-6 text-gray-800\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold\",\n      children: \"\\uD83E\\uDDE0 \\xC9cris ton premier algorithme\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Le robot doit atteindre la case en bas \\xE0 droite (\\uD83D\\uDEA9). Donne-lui des instructions simples :\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-disc ml-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"avancer()\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"tournerGauche()\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"tournerDroite()\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"w-full border rounded p-2 font-mono h-32\",\n      placeholder: \"Ex: avancer()\\\\navancer()\\\\ntournerDroite()\\\\navancer()\",\n      value: commands,\n      onChange: e => setCommands(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: runCommands,\n      className: \"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\",\n      children: \"Lancer l'algorithme \\uD83D\\uDE80\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-semibold\",\n        children: [\"Position finale : (\", position.x, \", \", position.y, \") \\u2014 Direction : \", position.direction]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-2 font-bold text-purple-700\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6 grid grid-cols-3 gap-1\",\n      children: [...Array(gridSize * gridSize)].map((_, idx) => {\n        const x = idx % gridSize;\n        const y = Math.floor(idx / gridSize);\n        const isRobot = position.x === x && position.y === y;\n        const isGoal = x === gridSize - 1 && y === gridSize - 1;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `w-full aspect-square border flex items-center justify-center text-lg ${isRobot ? 'bg-blue-100 font-bold' : 'bg-white'}`,\n          children: isRobot ? 'ü§ñ' : isGoal ? 'üö©' : ''\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n_s(FirstAlgorithmGame, \"S9qWlLhhpR4esLxzauEK24I9juY=\");\n_c = FirstAlgorithmGame;\nvar _c;\n$RefreshReg$(_c, \"FirstAlgorithmGame\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","initialPosition","x","y","direction","gridSize","FirstAlgorithmGame","_s","commands","setCommands","position","setPosition","history","setHistory","message","setMessage","resetGame","runCommands","lines","split","map","line","trim","filter","Boolean","pos","steps","cmd","moveForward","turnLeft","turnRight","push","newPos","directions","idx","indexOf","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","onClick","Array","_","Math","floor","isRobot","isGoal","_c","$RefreshReg$"],"sources":["C:/Users/Karim/Desktop/codeaventure/my-learning-app-starter/src/pages/lessons/FirstAlgorithmGame.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst initialPosition = { x: 0, y: 0, direction: 'right' };\r\nconst gridSize = 3;\r\n\r\nexport default function FirstAlgorithmGame() {\r\n    const [commands, setCommands] = useState('');\r\n    const [position, setPosition] = useState(initialPosition);\r\n    const [history, setHistory] = useState([]);\r\n    const [message, setMessage] = useState('');\r\n\r\n    function resetGame() {\r\n        setPosition(initialPosition);\r\n        setHistory([]);\r\n        setMessage('');\r\n    }\r\n\r\n    function runCommands() {\r\n        resetGame();\r\n        const lines = commands.split('\\n').map(line => line.trim()).filter(Boolean);\r\n        let pos = { ...initialPosition };\r\n        const steps = [pos];\r\n\r\n        for (let cmd of lines) {\r\n            if (cmd === 'avancer()') {\r\n                pos = moveForward(pos);\r\n            } else if (cmd === 'tournerGauche()') {\r\n                pos = turnLeft(pos);\r\n            } else if (cmd === 'tournerDroite()') {\r\n                pos = turnRight(pos);\r\n            } else {\r\n                setMessage(`Commande inconnue : ${cmd}`);\r\n                return;\r\n            }\r\n            steps.push({ ...pos });\r\n        }\r\n\r\n        setPosition(pos);\r\n        setHistory(steps);\r\n        if (pos.x === gridSize - 1 && pos.y === gridSize - 1) {\r\n            setMessage(\"üéâ Bravo ! Le robot est sorti du labyrinthe.\");\r\n        } else {\r\n            setMessage(\"‚ùå Le robot n'a pas atteint la sortie. Essaie encore !\");\r\n        }\r\n    }\r\n\r\n    function moveForward(pos) {\r\n        const newPos = { ...pos };\r\n        if (pos.direction === 'right' && pos.x < gridSize - 1) newPos.x++;\r\n        if (pos.direction === 'left' && pos.x > 0) newPos.x--;\r\n        if (pos.direction === 'up' && pos.y > 0) newPos.y--;\r\n        if (pos.direction === 'down' && pos.y < gridSize - 1) newPos.y++;\r\n        return newPos;\r\n    }\r\n\r\n    function turnLeft(pos) {\r\n        const directions = ['up', 'left', 'down', 'right'];\r\n        const idx = directions.indexOf(pos.direction);\r\n        return { ...pos, direction: directions[(idx + 1) % 4] };\r\n    }\r\n\r\n    function turnRight(pos) {\r\n        const directions = ['up', 'right', 'down', 'left'];\r\n        const idx = directions.indexOf(pos.direction);\r\n        return { ...pos, direction: directions[(idx + 1) % 4] };\r\n    }\r\n\r\n    return (\r\n        <div className=\"max-w-xl mx-auto p-6 space-y-6 text-gray-800\">\r\n            <h1 className=\"text-2xl font-bold\">üß† √âcris ton premier algorithme</h1>\r\n            <p>Le robot doit atteindre la case en bas √† droite (üö©). Donne-lui des instructions simples :</p>\r\n            <ul className=\"list-disc ml-6\">\r\n                <li><code>avancer()</code></li>\r\n                <li><code>tournerGauche()</code></li>\r\n                <li><code>tournerDroite()</code></li>\r\n            </ul>\r\n\r\n            <textarea\r\n                className=\"w-full border rounded p-2 font-mono h-32\"\r\n                placeholder=\"Ex: avancer()\\navancer()\\ntournerDroite()\\navancer()\"\r\n                value={commands}\r\n                onChange={e => setCommands(e.target.value)}\r\n            />\r\n\r\n            <button\r\n                onClick={runCommands}\r\n                className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\"\r\n            >\r\n                Lancer l'algorithme üöÄ\r\n            </button>\r\n\r\n            <div className=\"mt-4\">\r\n                <p className=\"font-semibold\">Position finale : ({position.x}, {position.y}) ‚Äî Direction : {position.direction}</p>\r\n                <p className=\"mt-2 font-bold text-purple-700\">{message}</p>\r\n            </div>\r\n\r\n            <div className=\"mt-6 grid grid-cols-3 gap-1\">\r\n                {[...Array(gridSize * gridSize)].map((_, idx) => {\r\n                    const x = idx % gridSize;\r\n                    const y = Math.floor(idx / gridSize);\r\n                    const isRobot = position.x === x && position.y === y;\r\n                    const isGoal = x === gridSize - 1 && y === gridSize - 1;\r\n                    return (\r\n                        <div key={idx} className={`w-full aspect-square border flex items-center justify-center text-lg ${isRobot ? 'bg-blue-100 font-bold' : 'bg-white'}`}>\r\n                            {isRobot ? 'ü§ñ' : isGoal ? 'üö©' : ''}\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,eAAe,GAAG;EAAEC,CAAC,EAAE,CAAC;EAAEC,CAAC,EAAE,CAAC;EAAEC,SAAS,EAAE;AAAQ,CAAC;AAC1D,MAAMC,QAAQ,GAAG,CAAC;AAElB,eAAe,SAASC,kBAAkBA,CAAA,EAAG;EAAAC,EAAA;EACzC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAACG,eAAe,CAAC;EACzD,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAE1C,SAASkB,SAASA,CAAA,EAAG;IACjBL,WAAW,CAACV,eAAe,CAAC;IAC5BY,UAAU,CAAC,EAAE,CAAC;IACdE,UAAU,CAAC,EAAE,CAAC;EAClB;EAEA,SAASE,WAAWA,CAAA,EAAG;IACnBD,SAAS,CAAC,CAAC;IACX,MAAME,KAAK,GAAGV,QAAQ,CAACW,KAAK,CAAC,IAAI,CAAC,CAACC,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,CAACC,MAAM,CAACC,OAAO,CAAC;IAC3E,IAAIC,GAAG,GAAG;MAAE,GAAGxB;IAAgB,CAAC;IAChC,MAAMyB,KAAK,GAAG,CAACD,GAAG,CAAC;IAEnB,KAAK,IAAIE,GAAG,IAAIT,KAAK,EAAE;MACnB,IAAIS,GAAG,KAAK,WAAW,EAAE;QACrBF,GAAG,GAAGG,WAAW,CAACH,GAAG,CAAC;MAC1B,CAAC,MAAM,IAAIE,GAAG,KAAK,iBAAiB,EAAE;QAClCF,GAAG,GAAGI,QAAQ,CAACJ,GAAG,CAAC;MACvB,CAAC,MAAM,IAAIE,GAAG,KAAK,iBAAiB,EAAE;QAClCF,GAAG,GAAGK,SAAS,CAACL,GAAG,CAAC;MACxB,CAAC,MAAM;QACHV,UAAU,CAAC,uBAAuBY,GAAG,EAAE,CAAC;QACxC;MACJ;MACAD,KAAK,CAACK,IAAI,CAAC;QAAE,GAAGN;MAAI,CAAC,CAAC;IAC1B;IAEAd,WAAW,CAACc,GAAG,CAAC;IAChBZ,UAAU,CAACa,KAAK,CAAC;IACjB,IAAID,GAAG,CAACvB,CAAC,KAAKG,QAAQ,GAAG,CAAC,IAAIoB,GAAG,CAACtB,CAAC,KAAKE,QAAQ,GAAG,CAAC,EAAE;MAClDU,UAAU,CAAC,8CAA8C,CAAC;IAC9D,CAAC,MAAM;MACHA,UAAU,CAAC,uDAAuD,CAAC;IACvE;EACJ;EAEA,SAASa,WAAWA,CAACH,GAAG,EAAE;IACtB,MAAMO,MAAM,GAAG;MAAE,GAAGP;IAAI,CAAC;IACzB,IAAIA,GAAG,CAACrB,SAAS,KAAK,OAAO,IAAIqB,GAAG,CAACvB,CAAC,GAAGG,QAAQ,GAAG,CAAC,EAAE2B,MAAM,CAAC9B,CAAC,EAAE;IACjE,IAAIuB,GAAG,CAACrB,SAAS,KAAK,MAAM,IAAIqB,GAAG,CAACvB,CAAC,GAAG,CAAC,EAAE8B,MAAM,CAAC9B,CAAC,EAAE;IACrD,IAAIuB,GAAG,CAACrB,SAAS,KAAK,IAAI,IAAIqB,GAAG,CAACtB,CAAC,GAAG,CAAC,EAAE6B,MAAM,CAAC7B,CAAC,EAAE;IACnD,IAAIsB,GAAG,CAACrB,SAAS,KAAK,MAAM,IAAIqB,GAAG,CAACtB,CAAC,GAAGE,QAAQ,GAAG,CAAC,EAAE2B,MAAM,CAAC7B,CAAC,EAAE;IAChE,OAAO6B,MAAM;EACjB;EAEA,SAASH,QAAQA,CAACJ,GAAG,EAAE;IACnB,MAAMQ,UAAU,GAAG,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,CAAC;IAClD,MAAMC,GAAG,GAAGD,UAAU,CAACE,OAAO,CAACV,GAAG,CAACrB,SAAS,CAAC;IAC7C,OAAO;MAAE,GAAGqB,GAAG;MAAErB,SAAS,EAAE6B,UAAU,CAAC,CAACC,GAAG,GAAG,CAAC,IAAI,CAAC;IAAE,CAAC;EAC3D;EAEA,SAASJ,SAASA,CAACL,GAAG,EAAE;IACpB,MAAMQ,UAAU,GAAG,CAAC,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,CAAC;IAClD,MAAMC,GAAG,GAAGD,UAAU,CAACE,OAAO,CAACV,GAAG,CAACrB,SAAS,CAAC;IAC7C,OAAO;MAAE,GAAGqB,GAAG;MAAErB,SAAS,EAAE6B,UAAU,CAAC,CAACC,GAAG,GAAG,CAAC,IAAI,CAAC;IAAE,CAAC;EAC3D;EAEA,oBACIlC,OAAA;IAAKoC,SAAS,EAAC,8CAA8C;IAAAC,QAAA,gBACzDrC,OAAA;MAAIoC,SAAS,EAAC,oBAAoB;MAAAC,QAAA,EAAC;IAA+B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvEzC,OAAA;MAAAqC,QAAA,EAAG;IAA0F;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACjGzC,OAAA;MAAIoC,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC1BrC,OAAA;QAAAqC,QAAA,eAAIrC,OAAA;UAAAqC,QAAA,EAAM;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC/BzC,OAAA;QAAAqC,QAAA,eAAIrC,OAAA;UAAAqC,QAAA,EAAM;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrCzC,OAAA;QAAAqC,QAAA,eAAIrC,OAAA;UAAAqC,QAAA,EAAM;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC,eAELzC,OAAA;MACIoC,SAAS,EAAC,0CAA0C;MACpDM,WAAW,EAAC,yDAAsD;MAClEC,KAAK,EAAEnC,QAAS;MAChBoC,QAAQ,EAAEC,CAAC,IAAIpC,WAAW,CAACoC,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,eAEFzC,OAAA;MACI+C,OAAO,EAAE9B,WAAY;MACrBmB,SAAS,EAAC,4DAA4D;MAAAC,QAAA,EACzE;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAETzC,OAAA;MAAKoC,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACjBrC,OAAA;QAAGoC,SAAS,EAAC,eAAe;QAAAC,QAAA,GAAC,qBAAmB,EAAC3B,QAAQ,CAACR,CAAC,EAAC,IAAE,EAACQ,QAAQ,CAACP,CAAC,EAAC,uBAAgB,EAACO,QAAQ,CAACN,SAAS;MAAA;QAAAkC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClHzC,OAAA;QAAGoC,SAAS,EAAC,gCAAgC;QAAAC,QAAA,EAAEvB;MAAO;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1D,CAAC,eAENzC,OAAA;MAAKoC,SAAS,EAAC,6BAA6B;MAAAC,QAAA,EACvC,CAAC,GAAGW,KAAK,CAAC3C,QAAQ,GAAGA,QAAQ,CAAC,CAAC,CAACe,GAAG,CAAC,CAAC6B,CAAC,EAAEf,GAAG,KAAK;QAC7C,MAAMhC,CAAC,GAAGgC,GAAG,GAAG7B,QAAQ;QACxB,MAAMF,CAAC,GAAG+C,IAAI,CAACC,KAAK,CAACjB,GAAG,GAAG7B,QAAQ,CAAC;QACpC,MAAM+C,OAAO,GAAG1C,QAAQ,CAACR,CAAC,KAAKA,CAAC,IAAIQ,QAAQ,CAACP,CAAC,KAAKA,CAAC;QACpD,MAAMkD,MAAM,GAAGnD,CAAC,KAAKG,QAAQ,GAAG,CAAC,IAAIF,CAAC,KAAKE,QAAQ,GAAG,CAAC;QACvD,oBACIL,OAAA;UAAeoC,SAAS,EAAE,wEAAwEgB,OAAO,GAAG,uBAAuB,GAAG,UAAU,EAAG;UAAAf,QAAA,EAC9Ie,OAAO,GAAG,IAAI,GAAGC,MAAM,GAAG,IAAI,GAAG;QAAE,GAD9BnB,GAAG;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAER,CAAC;MAEd,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAAClC,EAAA,CA1GuBD,kBAAkB;AAAAgD,EAAA,GAAlBhD,kBAAkB;AAAA,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}