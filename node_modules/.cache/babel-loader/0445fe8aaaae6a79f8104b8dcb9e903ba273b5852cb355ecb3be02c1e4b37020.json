{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Karim\\\\Desktop\\\\Administration Dz\\\\my-learning-app-starter\\\\src\\\\pages\\\\lessons\\\\PrixTTC.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst tauxTVAOptions = [{\n  label: '5.5%',\n  value: 5.5\n}, {\n  label: '10%',\n  value: 10\n}, {\n  label: '20%',\n  value: 20\n}];\nexport default function AlgoPrixHTTTC() {\n  _s();\n  const [prixHT, setPrixHT] = useState('');\n  const [tauxTVA, setTauxTVA] = useState(20);\n  const [prixTTC, setPrixTTC] = useState(null);\n  const [erreur, setErreur] = useState('');\n  const [algoLines, setAlgoLines] = useState(['']); // pour écrire l’algorithme\n  const [algoResult, setAlgoResult] = useState(null);\n  const [algoMessage, setAlgoMessage] = useState('');\n\n  // Calcul du prix TTC avec explication algorithmique\n  function calculerTTC() {\n    setErreur('');\n    setPrixTTC(null);\n    const ht = parseFloat(prixHT.replace(',', '.'));\n    if (isNaN(ht) || ht < 0) {\n      setErreur('Veuillez entrer un prix HT valide (nombre positif)');\n      return;\n    }\n    const taux = tauxTVA / 100;\n    const ttc = ht * (1 + taux);\n    setPrixTTC(ttc.toFixed(2));\n  }\n\n  // Validation ligne par ligne de l’algorithme écrit par l’utilisateur\n  function validerAlgo() {\n    // Algo attendu simplifié (pseudo-code) :\n    // 1. lire prixHT\n    // 2. lire tauxTVA\n    // 3. calculer prixTTC = prixHT * (1 + tauxTVA / 100)\n    // 4. afficher prixTTC\n\n    const lignes = algoLines.map(l => l.trim().toLowerCase());\n    const attendu = [['lire', 'prixht'], ['lire', 'tva'],\n    // on accepte aussi 'taux' ou 'taux de tva'\n    ['prixttc', '=', 'prixht', '*', '(', '1', '+', 'tva', '/', '100', ')'], ['afficher', 'prixttc']];\n\n    // Vérif simple ligne par ligne (tolérance minimale)\n    let valide = true;\n    if (lignes.length !== attendu.length) {\n      valide = false;\n    } else {\n      for (let i = 0; i < attendu.length; i++) {\n        for (let mot of attendu[i]) {\n          if (!lignes[i].includes(mot)) {\n            valide = false;\n            break;\n          }\n        }\n        if (!valide) break;\n      }\n    }\n    if (valide) {\n      setAlgoMessage('Bravo ! Ton algorithme est correct et suit bien la logique du calcul.');\n    } else {\n      setAlgoMessage(\"Il y a des erreurs dans ton algorithme. Essaie de suivre les étapes : lire les variables, calculer le TTC, afficher le résultat.\");\n    }\n  }\n\n  // Gestion de la saisie multi-lignes\n  function handleAlgoChange(e) {\n    setAlgoLines(e.target.value.split('\\n'));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: 500,\n      margin: '30px auto',\n      fontFamily: 'Arial, sans-serif'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Apprenons les algorithmes : calcul Prix TTC \\xE0 partir du Prix HT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      style: {\n        marginBottom: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"1. Comprendre la logique\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Un algorithme est une suite d'instructions qui permettent d\\u2019arriver \\xE0 un r\\xE9sultat.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Ici, on veut calculer le prix TTC \\xE0 partir du prix HT et du taux de TVA.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Formule :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 20\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"em\", {\n          children: \"Prix TTC = Prix HT \\xD7 (1 + TVA / 100)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 47\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      style: {\n        marginBottom: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"2. Essayons le calcul directement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Prix HT (\\u20AC) :\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 34\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: prixHT,\n          onChange: e => setPrixHT(e.target.value),\n          placeholder: \"Ex : 100\",\n          style: {\n            width: '100%',\n            padding: 8,\n            marginTop: 5,\n            boxSizing: 'border-box'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          display: 'block',\n          marginTop: 10\n        },\n        children: [\"Taux de TVA :\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 34\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: tauxTVA,\n          onChange: e => setTauxTVA(parseFloat(e.target.value)),\n          style: {\n            width: '100%',\n            padding: 8,\n            marginTop: 5\n          },\n          children: tauxTVAOptions.map(({\n            label,\n            value\n          }) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: value,\n            children: label\n          }, value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: calculerTTC,\n        style: {\n          marginTop: 15,\n          padding: '10px 15px',\n          fontSize: 16,\n          cursor: 'pointer',\n          backgroundColor: '#007bff',\n          color: 'white',\n          border: 'none',\n          borderRadius: 5\n        },\n        children: \"Calculer le prix TTC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), erreur && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red',\n          marginTop: 10\n        },\n        children: erreur\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 28\n      }, this), prixTTC && !erreur && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          marginTop: 15,\n          fontWeight: 'bold'\n        },\n        children: [\"Prix TTC = \", prixTTC, \" \\u20AC\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      style: {\n        marginBottom: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"3. \\xC9cris ton algorithme (ligne par ligne)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Exemple d'algorithme (pseudo-code) :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        style: {\n          background: '#f0f0f0',\n          padding: 10,\n          borderRadius: 5\n        },\n        children: `lire prixHT\nlire tva\nprixTTC = prixHT * (1 + tva / 100)\nafficher prixTTC`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: 6,\n        value: algoLines.join('\\n'),\n        onChange: handleAlgoChange,\n        placeholder: \"\\xC9cris ici ton algorithme...\",\n        style: {\n          width: '100%',\n          padding: 10,\n          fontFamily: 'monospace',\n          fontSize: 14\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: validerAlgo,\n        style: {\n          marginTop: 10,\n          padding: '10px 15px',\n          fontSize: 16,\n          cursor: 'pointer',\n          backgroundColor: '#28a745',\n          color: 'white',\n          border: 'none',\n          borderRadius: 5\n        },\n        children: \"Valider mon algorithme\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this), algoMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          marginTop: 15,\n          fontWeight: 'bold',\n          color: algoMessage.startsWith('Bravo') ? 'green' : 'red'\n        },\n        children: algoMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      style: {\n        fontSize: 14,\n        color: '#555'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Pourquoi \\xE9crire un algorithme ?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Un algorithme d\\xE9compose un probl\\xE8me en petites \\xE9tapes claires et ordonn\\xE9es. Ici, on a : lire les donn\\xE9es, calculer, puis afficher le r\\xE9sultat.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Cette d\\xE9marche est la base de la programmation et t\\u2019aide \\xE0 penser comme un d\\xE9veloppeur.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n}\n_s(AlgoPrixHTTTC, \"TZqz+8uJbvx9fZs6zsiaCmjMKKI=\");\n_c = AlgoPrixHTTTC;\nvar _c;\n$RefreshReg$(_c, \"AlgoPrixHTTTC\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","tauxTVAOptions","label","value","AlgoPrixHTTTC","_s","prixHT","setPrixHT","tauxTVA","setTauxTVA","prixTTC","setPrixTTC","erreur","setErreur","algoLines","setAlgoLines","algoResult","setAlgoResult","algoMessage","setAlgoMessage","calculerTTC","ht","parseFloat","replace","isNaN","taux","ttc","toFixed","validerAlgo","lignes","map","l","trim","toLowerCase","attendu","valide","length","i","mot","includes","handleAlgoChange","e","target","split","style","maxWidth","margin","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","type","onChange","placeholder","width","padding","marginTop","boxSizing","display","onClick","fontSize","cursor","backgroundColor","color","border","borderRadius","fontWeight","background","rows","join","startsWith","_c","$RefreshReg$"],"sources":["C:/Users/Karim/Desktop/Administration Dz/my-learning-app-starter/src/pages/lessons/PrixTTC.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst tauxTVAOptions = [\r\n    { label: '5.5%', value: 5.5 },\r\n    { label: '10%', value: 10 },\r\n    { label: '20%', value: 20 },\r\n];\r\n\r\nexport default function AlgoPrixHTTTC() {\r\n    const [prixHT, setPrixHT] = useState('');\r\n    const [tauxTVA, setTauxTVA] = useState(20);\r\n    const [prixTTC, setPrixTTC] = useState(null);\r\n    const [erreur, setErreur] = useState('');\r\n\r\n    const [algoLines, setAlgoLines] = useState(['']); // pour écrire l’algorithme\r\n    const [algoResult, setAlgoResult] = useState(null);\r\n    const [algoMessage, setAlgoMessage] = useState('');\r\n\r\n    // Calcul du prix TTC avec explication algorithmique\r\n    function calculerTTC() {\r\n        setErreur('');\r\n        setPrixTTC(null);\r\n        const ht = parseFloat(prixHT.replace(',', '.'));\r\n        if (isNaN(ht) || ht < 0) {\r\n            setErreur('Veuillez entrer un prix HT valide (nombre positif)');\r\n            return;\r\n        }\r\n        const taux = tauxTVA / 100;\r\n        const ttc = ht * (1 + taux);\r\n        setPrixTTC(ttc.toFixed(2));\r\n    }\r\n\r\n    // Validation ligne par ligne de l’algorithme écrit par l’utilisateur\r\n    function validerAlgo() {\r\n        // Algo attendu simplifié (pseudo-code) :\r\n        // 1. lire prixHT\r\n        // 2. lire tauxTVA\r\n        // 3. calculer prixTTC = prixHT * (1 + tauxTVA / 100)\r\n        // 4. afficher prixTTC\r\n\r\n        const lignes = algoLines.map(l => l.trim().toLowerCase());\r\n\r\n        const attendu = [\r\n            ['lire', 'prixht'],\r\n            ['lire', 'tva'], // on accepte aussi 'taux' ou 'taux de tva'\r\n            ['prixttc', '=', 'prixht', '*', '(', '1', '+', 'tva', '/', '100', ')'],\r\n            ['afficher', 'prixttc'],\r\n        ];\r\n\r\n        // Vérif simple ligne par ligne (tolérance minimale)\r\n        let valide = true;\r\n        if (lignes.length !== attendu.length) {\r\n            valide = false;\r\n        } else {\r\n            for (let i = 0; i < attendu.length; i++) {\r\n                for (let mot of attendu[i]) {\r\n                    if (!lignes[i].includes(mot)) {\r\n                        valide = false;\r\n                        break;\r\n                    }\r\n                }\r\n                if (!valide) break;\r\n            }\r\n        }\r\n\r\n        if (valide) {\r\n            setAlgoMessage('Bravo ! Ton algorithme est correct et suit bien la logique du calcul.');\r\n        } else {\r\n            setAlgoMessage(\"Il y a des erreurs dans ton algorithme. Essaie de suivre les étapes : lire les variables, calculer le TTC, afficher le résultat.\");\r\n        }\r\n    }\r\n\r\n    // Gestion de la saisie multi-lignes\r\n    function handleAlgoChange(e) {\r\n        setAlgoLines(e.target.value.split('\\n'));\r\n    }\r\n\r\n    return (\r\n        <div style={{ maxWidth: 500, margin: '30px auto', fontFamily: 'Arial, sans-serif' }}>\r\n            <h2>Apprenons les algorithmes : calcul Prix TTC à partir du Prix HT</h2>\r\n\r\n            <section style={{ marginBottom: 20 }}>\r\n                <h3>1. Comprendre la logique</h3>\r\n                <p>Un algorithme est une suite d'instructions qui permettent d’arriver à un résultat.</p>\r\n                <p>Ici, on veut calculer le prix TTC à partir du prix HT et du taux de TVA.</p>\r\n                <p><strong>Formule :</strong> <em>Prix TTC = Prix HT × (1 + TVA / 100)</em></p>\r\n            </section>\r\n\r\n            <section style={{ marginBottom: 20 }}>\r\n                <h3>2. Essayons le calcul directement</h3>\r\n                <label>\r\n                    Prix HT (€) :<br />\r\n                    <input\r\n                        type=\"text\"\r\n                        value={prixHT}\r\n                        onChange={e => setPrixHT(e.target.value)}\r\n                        placeholder=\"Ex : 100\"\r\n                        style={{ width: '100%', padding: 8, marginTop: 5, boxSizing: 'border-box' }}\r\n                    />\r\n                </label>\r\n\r\n                <label style={{ display: 'block', marginTop: 10 }}>\r\n                    Taux de TVA :<br />\r\n                    <select\r\n                        value={tauxTVA}\r\n                        onChange={e => setTauxTVA(parseFloat(e.target.value))}\r\n                        style={{ width: '100%', padding: 8, marginTop: 5 }}\r\n                    >\r\n                        {tauxTVAOptions.map(({ label, value }) => (\r\n                            <option key={value} value={value}>{label}</option>\r\n                        ))}\r\n                    </select>\r\n                </label>\r\n\r\n                <button\r\n                    onClick={calculerTTC}\r\n                    style={{ marginTop: 15, padding: '10px 15px', fontSize: 16, cursor: 'pointer', backgroundColor: '#007bff', color: 'white', border: 'none', borderRadius: 5 }}\r\n                >\r\n                    Calculer le prix TTC\r\n                </button>\r\n\r\n                {erreur && <p style={{ color: 'red', marginTop: 10 }}>{erreur}</p>}\r\n                {prixTTC && !erreur && (\r\n                    <p style={{ marginTop: 15, fontWeight: 'bold' }}>\r\n                        Prix TTC = {prixTTC} €\r\n                    </p>\r\n                )}\r\n            </section>\r\n\r\n            <section style={{ marginBottom: 20 }}>\r\n                <h3>3. Écris ton algorithme (ligne par ligne)</h3>\r\n                <p>Exemple d'algorithme (pseudo-code) :</p>\r\n                <pre style={{ background: '#f0f0f0', padding: 10, borderRadius: 5 }}>\r\n{`lire prixHT\r\nlire tva\r\nprixTTC = prixHT * (1 + tva / 100)\r\nafficher prixTTC`}\r\n        </pre>\r\n                <textarea\r\n                    rows={6}\r\n                    value={algoLines.join('\\n')}\r\n                    onChange={handleAlgoChange}\r\n                    placeholder=\"Écris ici ton algorithme...\"\r\n                    style={{ width: '100%', padding: 10, fontFamily: 'monospace', fontSize: 14 }}\r\n                />\r\n                <button\r\n                    onClick={validerAlgo}\r\n                    style={{ marginTop: 10, padding: '10px 15px', fontSize: 16, cursor: 'pointer', backgroundColor: '#28a745', color: 'white', border: 'none', borderRadius: 5 }}\r\n                >\r\n                    Valider mon algorithme\r\n                </button>\r\n                {algoMessage && (\r\n                    <p style={{ marginTop: 15, fontWeight: 'bold', color: algoMessage.startsWith('Bravo') ? 'green' : 'red' }}>\r\n                        {algoMessage}\r\n                    </p>\r\n                )}\r\n            </section>\r\n\r\n            <section style={{ fontSize: 14, color: '#555' }}>\r\n                <h3>Pourquoi écrire un algorithme ?</h3>\r\n                <p>Un algorithme décompose un problème en petites étapes claires et ordonnées.\r\n                    Ici, on a : lire les données, calculer, puis afficher le résultat.</p>\r\n                <p>Cette démarche est la base de la programmation et t’aide à penser comme un développeur.</p>\r\n            </section>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}