{"ast":null,"code":"import React,{useState}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const numbers=[0,5,11,3,10,-1,7,12,1,15];export default function InputRangeLesson(){const[input,setInput]=useState('');const[resultMessage,setResultMessage]=useState('');const[message,setMessage]=useState('');const[valid,setValid]=useState(null);const[validBox,setValidBox]=useState([]);const[invalidBox,setInvalidBox]=useState([]);const[dragged,setDragged]=useState(null);const[showResult,setShowResult]=useState(false);// Vérification du champ de saisie\nconst checkInput=()=>{const value=parseInt(input);if(isNaN(value)){setMessage(\"🚫 Ce n’est pas un nombre.\");setValid(false);}else if(value>=1&&value<=10){setMessage(\"✅ Bien joué ! Tu as saisi un nombre entre 1 et 10.\");setValid(true);}else{setMessage(\"⚠️ Le nombre doit être entre 1 et 10.\");setValid(false);}};const handleDragStart=num=>setDragged(num);const handleDrop=boxType=>{if(boxType==='valid'){setValidBox([...validBox,dragged]);}else{setInvalidBox([...invalidBox,dragged]);}setDragged(null);};const isValid=n=>n>=1&&n<=10;const handleCheck=()=>{const allValidCorrect=validBox.every(isValid);const allInvalidCorrect=invalidBox.every(n=>!isValid(n));const allSorted=validBox.length+invalidBox.length===numbers.length;if(!allSorted){setResultMessage('❗️ Tu dois classer tous les nombres.');return;}if(allValidCorrect&&allInvalidCorrect){setResultMessage('🎉 Bravo, tous les nombres sont bien triés !');}else{setResultMessage('❌ Il y a des erreurs dans ton tri, essaie encore.');}};const getRemaining=()=>numbers.filter(n=>!validBox.includes(n)&&!invalidBox.includes(n));return/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-xl mx-auto p-6 space-y-8 font-sans\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-2xl font-bold\",children:\"\\uD83D\\uDCE5 Saisir un nombre entre 1 et 10\"}),/*#__PURE__*/_jsx(\"p\",{children:\"En programmation, il est important de contr\\xF4ler les donn\\xE9es saisies. Par exemple, on peut exiger que l'utilisateur entre un nombre entre 1 et 10.\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block font-medium\",children:\"Entre un nombre :\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:input,onChange:e=>setInput(e.target.value),className:\"border px-3 py-2 rounded mt-1 w-full\",placeholder:\"Tape un nombre entre 1 et 10\"}),/*#__PURE__*/_jsx(\"button\",{onClick:checkInput,className:\"mt-2 bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\",children:\"V\\xE9rifier\"}),message&&/*#__PURE__*/_jsx(\"p\",{className:\"mt-2 font-semibold \".concat(valid?'text-green-600':'text-red-600'),children:message})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-100 p-4 rounded\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-lg font-semibold\",children:\"\\uD83E\\uDDE0 Pseudo-code\"}),/*#__PURE__*/_jsx(\"pre\",{className:\"whitespace-pre-wrap text-sm\",children:\"r\\xE9p\\xE9ter\\n    lire un nombre\\njusqu\\u2019\\xE0 ce que le nombre soit >= 1 et <= 10\\nafficher \\\"Nombre valide\\\"\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"pt-6 border-t\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-bold mb-2\",children:\"\\uD83C\\uDFAE Jeu : trie les bons nombres !\"}),/*#__PURE__*/_jsx(\"p\",{className:\"mb-4\",children:\"Fais glisser chaque nombre dans la bonne bo\\xEEte.\"}),/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-wrap gap-2 mb-4\",children:getRemaining().map(num=>/*#__PURE__*/_jsx(\"div\",{draggable:true,onDragStart:()=>handleDragStart(num),className:\"px-4 py-2 bg-gray-200 rounded cursor-move hover:bg-gray-300\",children:num},num))}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex gap-4\",children:[/*#__PURE__*/_jsxs(\"div\",{onDragOver:e=>e.preventDefault(),onDrop:()=>handleDrop('valid'),className:\"flex-1 min-h-[100px] p-4 border-2 border-green-500 rounded\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"font-semibold text-green-700 mb-2\",children:\"\\u2705 Valide (1 \\xE0 10)\"}),/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-wrap gap-2\",children:validBox.map(num=>/*#__PURE__*/_jsx(\"span\",{className:\"bg-green-100 px-3 py-1 rounded\",children:num},num))})]}),/*#__PURE__*/_jsxs(\"div\",{onDragOver:e=>e.preventDefault(),onDrop:()=>handleDrop('invalid'),className:\"flex-1 min-h-[100px] p-4 border-2 border-red-500 rounded\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"font-semibold text-red-700 mb-2\",children:\"\\u274C Invalide\"}),/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-wrap gap-2\",children:invalidBox.map(num=>/*#__PURE__*/_jsx(\"span\",{className:\"bg-red-100 px-3 py-1 rounded\",children:num},num))})]})]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleCheck,className:\"mt-4 bg-purple-600 text-white px-4 py-2 rounded hover:bg-purple-700\",children:\"V\\xE9rifier le tri\"}),resultMessage&&/*#__PURE__*/_jsx(\"p\",{className:\"mt-3 font-semibold \".concat(resultMessage.includes('Bravo')?'text-green-700':'text-red-700'),children:resultMessage})]})]});}","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","numbers","InputRangeLesson","input","setInput","resultMessage","setResultMessage","message","setMessage","valid","setValid","validBox","setValidBox","invalidBox","setInvalidBox","dragged","setDragged","showResult","setShowResult","checkInput","value","parseInt","isNaN","handleDragStart","num","handleDrop","boxType","isValid","n","handleCheck","allValidCorrect","every","allInvalidCorrect","allSorted","length","getRemaining","filter","includes","className","children","type","onChange","e","target","placeholder","onClick","concat","map","draggable","onDragStart","onDragOver","preventDefault","onDrop"],"sources":["C:/Users/Karim/Desktop/codeaventure/my-learning-app-starter/src/pages/lessons/InputRangeLesson.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst numbers = [0, 5, 11, 3, 10, -1, 7, 12, 1, 15];\r\n\r\nexport default function InputRangeLesson() {\r\n    const [input, setInput] = useState('');\r\n    const [resultMessage, setResultMessage] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [valid, setValid] = useState(null);\r\n\r\n    const [validBox, setValidBox] = useState([]);\r\n    const [invalidBox, setInvalidBox] = useState([]);\r\n    const [dragged, setDragged] = useState(null);\r\n    const [showResult, setShowResult] = useState(false);\r\n\r\n    // Vérification du champ de saisie\r\n    const checkInput = () => {\r\n        const value = parseInt(input);\r\n        if (isNaN(value)) {\r\n            setMessage(\"🚫 Ce n’est pas un nombre.\");\r\n            setValid(false);\r\n        } else if (value >= 1 && value <= 10) {\r\n            setMessage(\"✅ Bien joué ! Tu as saisi un nombre entre 1 et 10.\");\r\n            setValid(true);\r\n        } else {\r\n            setMessage(\"⚠️ Le nombre doit être entre 1 et 10.\");\r\n            setValid(false);\r\n        }\r\n    };\r\n\r\n    const handleDragStart = (num) => setDragged(num);\r\n\r\n    const handleDrop = (boxType) => {\r\n        if (boxType === 'valid') {\r\n            setValidBox([...validBox, dragged]);\r\n        } else {\r\n            setInvalidBox([...invalidBox, dragged]);\r\n        }\r\n        setDragged(null);\r\n    };\r\n\r\n    const isValid = (n) => n >= 1 && n <= 10;\r\n\r\n    const handleCheck = () => {\r\n        const allValidCorrect = validBox.every(isValid);\r\n        const allInvalidCorrect = invalidBox.every(n => !isValid(n));\r\n        const allSorted = validBox.length + invalidBox.length === numbers.length;\r\n\r\n        if (!allSorted) {\r\n            setResultMessage('❗️ Tu dois classer tous les nombres.');\r\n            return;\r\n        }\r\n\r\n        if (allValidCorrect && allInvalidCorrect) {\r\n            setResultMessage('🎉 Bravo, tous les nombres sont bien triés !');\r\n        } else {\r\n            setResultMessage('❌ Il y a des erreurs dans ton tri, essaie encore.');\r\n        }\r\n    };\r\n\r\n    const getRemaining = () =>\r\n        numbers.filter(n => !validBox.includes(n) && !invalidBox.includes(n));\r\n\r\n    return (\r\n        <div className=\"max-w-xl mx-auto p-6 space-y-8 font-sans\">\r\n            <h1 className=\"text-2xl font-bold\">📥 Saisir un nombre entre 1 et 10</h1>\r\n\r\n            <p>\r\n                En programmation, il est important de contrôler les données saisies. Par exemple, on peut exiger que\r\n                l'utilisateur entre un nombre entre 1 et 10.\r\n            </p>\r\n\r\n            {/* Saisie simple */}\r\n            <div>\r\n                <label className=\"block font-medium\">Entre un nombre :</label>\r\n                <input\r\n                    type=\"number\"\r\n                    value={input}\r\n                    onChange={(e) => setInput(e.target.value)}\r\n                    className=\"border px-3 py-2 rounded mt-1 w-full\"\r\n                    placeholder=\"Tape un nombre entre 1 et 10\"\r\n                />\r\n                <button\r\n                    onClick={checkInput}\r\n                    className=\"mt-2 bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\"\r\n                >\r\n                    Vérifier\r\n                </button>\r\n                {message && (\r\n                    <p className={`mt-2 font-semibold ${valid ? 'text-green-600' : 'text-red-600'}`}>\r\n                        {message}\r\n                    </p>\r\n                )}\r\n            </div>\r\n\r\n            {/* Pseudo-code */}\r\n            <div className=\"bg-gray-100 p-4 rounded\">\r\n                <h2 className=\"text-lg font-semibold\">🧠 Pseudo-code</h2>\r\n                <pre className=\"whitespace-pre-wrap text-sm\">\r\n{`répéter\r\n    lire un nombre\r\njusqu’à ce que le nombre soit >= 1 et <= 10\r\nafficher \"Nombre valide\"`}\r\n        </pre>\r\n            </div>\r\n\r\n            {/* Mini-jeu drag & drop */}\r\n            <div className=\"pt-6 border-t\">\r\n                <h2 className=\"text-xl font-bold mb-2\">🎮 Jeu : trie les bons nombres !</h2>\r\n                <p className=\"mb-4\">Fais glisser chaque nombre dans la bonne boîte.</p>\r\n\r\n                <div className=\"flex flex-wrap gap-2 mb-4\">\r\n                    {getRemaining().map((num) => (\r\n                        <div\r\n                            key={num}\r\n                            draggable\r\n                            onDragStart={() => handleDragStart(num)}\r\n                            className=\"px-4 py-2 bg-gray-200 rounded cursor-move hover:bg-gray-300\"\r\n                        >\r\n                            {num}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n\r\n                <div className=\"flex gap-4\">\r\n                    {/* Boîte Valide */}\r\n                    <div\r\n                        onDragOver={(e) => e.preventDefault()}\r\n                        onDrop={() => handleDrop('valid')}\r\n                        className=\"flex-1 min-h-[100px] p-4 border-2 border-green-500 rounded\"\r\n                    >\r\n                        <h3 className=\"font-semibold text-green-700 mb-2\">✅ Valide (1 à 10)</h3>\r\n                        <div className=\"flex flex-wrap gap-2\">\r\n                            {validBox.map((num) => (\r\n                                <span key={num} className=\"bg-green-100 px-3 py-1 rounded\">{num}</span>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Boîte Invalide */}\r\n                    <div\r\n                        onDragOver={(e) => e.preventDefault()}\r\n                        onDrop={() => handleDrop('invalid')}\r\n                        className=\"flex-1 min-h-[100px] p-4 border-2 border-red-500 rounded\"\r\n                    >\r\n                        <h3 className=\"font-semibold text-red-700 mb-2\">❌ Invalide</h3>\r\n                        <div className=\"flex flex-wrap gap-2\">\r\n                            {invalidBox.map((num) => (\r\n                                <span key={num} className=\"bg-red-100 px-3 py-1 rounded\">{num}</span>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <button\r\n                    onClick={handleCheck}\r\n                    className=\"mt-4 bg-purple-600 text-white px-4 py-2 rounded hover:bg-purple-700\"\r\n                >\r\n                    Vérifier le tri\r\n                </button>\r\n\r\n                {resultMessage && (\r\n                    <p className={`mt-3 font-semibold ${resultMessage.includes('Bravo') ? 'text-green-700' : 'text-red-700'}`}>\r\n                        {resultMessage}\r\n                    </p>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}